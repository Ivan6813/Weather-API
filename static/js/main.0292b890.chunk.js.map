{"version":3,"sources":["Components/CurrentDate/CurrentDate.js","Components/CurrentWeather/CurrentWeather.js","Components/TodayWeather/TodayWeather.js","Components/HourlyWeather/HourlyWeather.js","Components/SearchBar/SearchBar.js","App.js","index.js"],"names":["CurrentDate","props","data","className","location","name","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","Date","Currentweather","src","current","condition","icon","alt","text","Math","round","temp_c","feelslike_c","TodayWeather","forecast","forecastday","maxtemp_c","mintemp_c","pressure_mb","humidity","wind_dir","wind_kph","Hourlyweather","hour","slidesPerGroup","slidesPerView","speed","breakpoints","map","item","index","time_epoch","SearchBar","useState","city","setCity","setData","type","onChange","event","target","value","placeholder","onClick","fetch","then","res","json","result","undefined","error","message","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0292b890.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./currentDate.css\";\r\n\r\nconst CurrentDate = (props) => {\r\n\r\n    const data = props.data;\r\n\r\n    const getDate = (d) => {\r\n        let months = [\"января\", \"февраля\", \"марта\", \"апреля\", \"мая\", \"июня\", \"июля\", \"августа\", \"сентября\", \"октября\", \"ноября\", \"декабря\"];\r\n        let days = [\"воскресенье\", \"понедельник\", \"вторник\", \"среда\", \"четверг\", \"пятница\", \"суббота\"];\r\n\r\n        let day = days[d.getDay()];\r\n        let date = d.getDate();\r\n        let month = months[d.getMonth()];\r\n        let year = d.getFullYear();\r\n\r\n        return `Сегодня ${day}, ${date} ${month} ${year}`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"row pt-4 justify-content-center\">\r\n            <div className=\"location col-11 col-lg-12\">{data.location.name}, {data.location.country}</div>\r\n            <div className=\"current-date col\">{getDate(new Date())}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CurrentDate;","import React from \"react\";\r\nimport \"./currentWeather.css\";\r\n\r\nconst Currentweather = (props) => {\r\n\r\n    const data = props.data;\r\n\r\n    return ( \r\n        <div className=\"current-weather col-12 col-lg-5\">\r\n            <div className=\"current-condition_block\">\r\n                <img src={data.current.condition.icon} className=\"icon\" alt=\"\"/>\r\n                <div className=\"condition\">{data.current.condition.text}</div>\r\n            </div>\r\n            <div className=\"current-temp_block\">\r\n                <div className=\"current-temp\">{Math.round(data.current.temp_c)}</div>\r\n                <div className=\"feelslike\">Ощущается как {Math.round(data.current.feelslike_c)}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Currentweather;","import React from \"react\";\r\nimport \"./todayWeather.css\";\r\n\r\nconst TodayWeather = (props) => {\r\n\r\n    const data = props.data;\r\n\r\n    return ( \r\n        <div className=\"today-weather col-lg-5 col-md-7 col-11\">\r\n            <div className=\"today-condition_block\">\r\n                <div className=\"temp-today\">\r\n                    <div className=\"temp-day\">Днём: {Math.round(data.forecast.forecastday[0].day.maxtemp_c)}</div>\r\n                    <div className=\"temp-night\">Ночью: {Math.round(data.forecast.forecastday[0].day.mintemp_c)}</div>\r\n                </div>\r\n                <img src={data.forecast.forecastday[0].day.condition.icon}\r\n                className=\"icon\" alt=\"\"/>\r\n                <div className=\"condition\">{data.forecast.forecastday[0].day.condition.text}</div>\r\n            </div>\r\n            <div className=\"weather-info\">\r\n                <div className=\"pressure\">Давление: {data.current.pressure_mb}мм</div>\r\n                <div className=\"humidity\">Влажность: {data.current.humidity}%</div>\r\n                <div className=\"wind_dir\">Направление ветра: {data.current.wind_dir}</div>\r\n                <div className=\"wind_kph\">Скорость ветра: {Math.round(data.current.wind_kph)}м/с</div>\r\n            </div>\r\n        </div>      \r\n    );\r\n};\r\n\r\nexport default TodayWeather;","import React from \"react\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react/swiper-react\";\r\nimport \"swiper/swiper.min.css\";\r\nimport \"./hourlyWeather.css\";\r\n\r\nfunction Hourlyweather(props) {\r\n\r\n    const data = props.data.forecast.forecastday[0].hour; \r\n\r\n    return (\r\n        <div className=\"pt-4 pb-3 pt-md-5 \">\r\n            <Swiper\r\n            slidesPerGroup={3}\r\n            slidesPerView={3}\r\n            speed={1000}\r\n            breakpoints={{\r\n                \"320\": {\r\n                    \"slidesPerView\": 3\r\n                },\r\n                \"640\": {\r\n                    \"slidesPerView\": 4\r\n                },\r\n                \"1024\": {\r\n                    \"slidesPerView\": 8\r\n                }\r\n            }}>\r\n            {data.map( (item, index) =>{\r\n                return (\r\n                    <SwiperSlide>\r\n                        <div key={item.time_epoch} className=\"item\">\r\n                            <div className=\"time\">{index}:00</div>\r\n                            <img src={item.condition.icon} className=\"icon\" alt=\"\"/>\r\n                            <div className=\"temp\">{Math.round(item.temp_c)}</div>\r\n                            <div className=\"pressure\">{item.pressure_mb}мм</div>\r\n                            <div className=\"humidity\">{item.humidity}%</div>\r\n                            <div className=\"wind_dir\">{item.wind_dir}</div>\r\n                            <div className=\"wind_kph\">{Math.round(item.wind_kph)}м/с</div>\r\n                        </div>\r\n                    </SwiperSlide>\r\n                )})}\r\n            </Swiper>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hourlyweather;","import React, {useState} from \"react\";\r\nimport CurrentDate from \"../CurrentDate/CurrentDate\";\r\nimport Currentweather from \"../CurrentWeather/CurrentWeather\";\r\nimport TodayWeather from \"../TodayWeather/TodayWeather\";\r\nimport Hourlyweather from \"../HourlyWeather/HourlyWeather\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport \"./searchBar.css\";\r\n\r\n\r\nfunction SearchBar () {\r\n    \r\n    const [city, setCity] = useState(\"\");\r\n    const [data, setData] = useState(null);\r\n\r\n    const search = () => {\r\n        fetch(`http://api.weatherapi.com/v1/forecast.json?key=a19108012f8345c199672427210910&q=${city}&days=1&aqi=no&alerts=no&lang=RU`)\r\n        .then(res => res.json())\r\n        .then(result => setData(result))\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row justify-content-center pt-3 pt-lg-4\">\r\n                <input className=\"search-bar col-8 col-lg-7\" type=\"text\" onChange={(event)=>{setCity(event.target.value);}} placeholder=\"Введите название города\"/>\r\n                <button className=\"search-btn col-3 col-sm-2 col-md-1\" onClick={search}>Get Weather</button>\r\n            </div>\r\n            {(data !== null && data.location !== undefined) ? (\r\n                <div>\r\n                    <CurrentDate data={data}/>\r\n                    <div className=\"row justify-content-evenly pt-lg-5\">\r\n                        <Currentweather data={data}/>\r\n                        <TodayWeather data={data}/>\r\n                    </div>\r\n                    <Hourlyweather data={data}/>\r\n                </div>\r\n            ):(\r\n                <div>\r\n                    {(data !== null && data.error !== undefined) ? (\r\n                        <div className=\"error\">{data.error.message}</div>\r\n                    ):(\r\n                        <div></div>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchBar;","import SearchBar from './Components/SearchBar/SearchBar';\n\nfunction App() {\n  return (\n    <div className=\"wrapper\">\n      <div className=\"container\">\n        <SearchBar/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}